name: "Upload assets to the shared CDN"
description: |
  Upload some static assets to the assets.account.gov.uk CDN. This action builds the assets,
  uploads the ./dist/public folder to <stack-name>/public, and specifies the path to your version of the
  govuk-frontend node module.
inputs:
  signing-key-arn:
    description: "ARN of the KMS key to sign the ZIP file"
    required: true
  stack-name:
    description: "The unique name for this front-end (eg. core-front or auth-front)"
    required: true
  destination-bucket-name:
    description: "The S3 bucket where the asset package will be uploaded"
    required: true
  base-path:
    description: "The path to the directory with the package.json file"
    required: false
  path-to-sass:
    description: 'The path to the main sass file with "@import <path to govuk-frontend module>"'
    required: false
  package-manager:
    description: "Choose your build tool, npm or yarn."
    required: false
    default: npm
  pull-repository:
    description: "Pull the repository before running pre-commit"
    required: false
    default: "false"
  aws-role-arn:
    description: "ARN of the AWS role to assume for authentication"
    required: false
  aws-region:
    description: "AWS region to use"
    required: false
    default: eu-west-2
  aws-session-name:
    description: "Override the default AWS session name"
    required: false
runs:
  using: composite
  steps:
    - name: Pull repository
      if: ${{ inputs.pull-repository == 'true' }}
      uses: actions/checkout@v5

    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        cache: ${{ inputs.package-manager }}

    - name: Install dependencies
      shell: bash
      env:
        PKG_MGR: ${{ inputs.package-manager }}
      run: |
        [[ $PKG_MGR == npm ]] && npm ci || yarn install --frozen-lockfile

    - name: Assume AWS Role
      if: ${{ inputs.aws-role-arn != null }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        role-session-name: ${{ inputs.aws-session-name }}
        aws-region: ${{ inputs.aws-region }}

    - name: Upload assets
      working-directory: ${{ inputs.base-path }}
      shell: bash
      env:
        SIGNING_KEY: ${{ inputs.signing-key-arn }}
        STACK_NAME: ${{ inputs.stack-name }}
        PKG_MGR: ${{ inputs.package-manager }}
        PATH_TO_SASS: ${{ inputs.path-to-sass }}
        ARTIFACT_BUCKET: ${{ inputs.destination-bucket-name }}
      run: ${{ github.action_path }}/upload-assets.sh
