name: "Build an AWS SAM application"
description: "Validates and builds the specified SAM application. The built artifact is found in the .aws-sam directory"
inputs:
  aws-region:
    description: "AWS region to use when validating the template"
    required: false
    default: eu-west-2
  template:
    description: "Path of the SAM template file to use"
    required: false
  base-dir:
    description: "Resolve relative paths to lambda functions' source code with respect to this folder"
    required: false
  source-dir:
    description: "Source code directory to use as a cache key when building the SAM application"
    required: false
  artifact-name:
    description: "Name of the artifact to upload"
    required: false
  additional-artifact-paths:
    description: "Additional paths to include in the artifact apart from the application"
    required: false
  upload-artifact:
    description: "Whether to upload a GitHub Actions artifact"
    required: false
    default: "true"
  enable-beta-features:
    description: "Use SAM beta features when building an application"
    required: false
    default: "false"
  cache-name:
    description: "Customise the key used for caching SAM dependencies"
    required: false
    default: build
  disable-parallel:
    description: "Set to true to build the resources sequentially"
    required: false
    default: "false"
  pull-repository:
    description: "Whether to pull the repository before building"
    required: false
    default: "false"
outputs:
  artifact-name:
    description: "Pass through the artifact name"
    value: ${{ inputs.artifact-name }}
  cache-key:
    description: "The cache key used when building the SAM application"
    value: ${{ steps.get-cache-key.outputs.cache-key }}
  cache-restore-keys:
    description: "The cache restore keys used when building the SAM application"
    value: ${{ steps.get-cache-key.outputs.restore-keys }}
runs:
  using: composite
  steps:
    - name: Pull repository
      if: ${{ inputs.pull-repository == 'true' }}
      uses: actions/checkout@v4

    - name: Validate SAM template
      shell: bash
      env:
        AWS_REGION: ${{ inputs.aws-region }}
        TEMPLATE: ${{ inputs.template }}
        VALIDATE: ${{ github.action_path }}/../../scripts/aws/sam/validate-template.sh
      run: $VALIDATE

    - name: Get cache key
      id: get-cache-key
      shell: bash
      env:
        OS: ${{ runner.os }}
        CACHE_NAME: ${{ inputs.cache-name }}
        HASH: ${{ hashFiles(inputs.template || '**/template.y*ml', inputs.source-dir) }}
      run: |
        restore_key=$OS-sam-$CACHE_NAME
        echo "cache-key=$restore_key-$HASH" >> "$GITHUB_OUTPUT"
        echo "restore-keys=$restore_key-" >> "$GITHUB_OUTPUT"

    - name: Cache SAM dependencies
      uses: actions/cache@v4
      with:
        key: ${{ steps.get-cache-key.outputs.cache-key }}
        restore-keys: ${{ steps.get-cache-key.outputs.restore-keys }}
        path: .aws-sam

    - name: Build SAM Application
      shell: bash
      env:
        TEMPLATE_FILE: ${{ inputs.template }}
        BETA_FEATURES: ${{ inputs.enable-beta-features == 'true' }}
        PARALLEL: ${{ inputs.disable-parallel == 'false' }}
        BASE_DIR: ${{ inputs.base-dir }}
      run: |
        sam build --cached \
          ${TEMPLATE_FILE:+--template-file "$TEMPLATE_FILE"} \
          ${BASE_DIR:+--base-dir "$BASE_DIR"} \
          "$($PARALLEL && echo "--parallel")" \
          "$($BETA_FEATURES && echo "--beta-features")"

    - name: Archive SAM distribution artifact
      if: ${{ inputs.upload-artifact && inputs.artifact-name != null }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        retention-days: 3
        path: |
          .aws-sam/build
          ${{ inputs.additional-artifact-paths }}
