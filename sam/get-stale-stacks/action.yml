name: "Get stale stacks"
description: "Retrieve names of AWS SAM stacks older than a set threshold, and filtered by name and tags"
inputs:
  aws-role-arn:
    description: "AWS role ARN to assume when validating the template"
    required: false
  aws-region:
    description: "AWS region to use"
    required: false
    default: eu-west-2
  threshold-days:
    description: "Get stacks older than the specified number of days"
    required: false
    default: "30"
  stack-name-filter:
    description: "Only retrieve stacks whose names contain the specified string"
    required: false
  stack-tag-filters:
    description: 'Filter stacks by tags, encoded as name=value pairs separated by newlines or "|"'
    required: true
  env-var-name:
    description: "Accumulate stack names in the environment variable with the specified name, persisted in the job"
    required: false
  description:
    description: "Description of the stale stacks - for logging purposes only"
    required: false
outputs:
  stack-names:
    description: "Filtered stack names"
    value: ${{ steps.filter-stacks.outputs.stack-names }}
  stack-names-json:
    description: "Filtered stack names formatted as a JSON array"
    value: ${{ steps.filter-stacks.outputs.stack-names-json }}
runs:
  using: composite
  steps:
    - name: Assume AWS Role
      if: ${{ inputs.aws-role-arn != null }}
      uses: aws-actions/configure-aws-credentials@v5
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        aws-region: ${{ inputs.aws-region }}

    - name: Parse tag filters
      id: parse-tag-filters
      shell: bash
      env:
        PARAMETERS: ${{ inputs.stack-tag-filters }}
        ASSOCIATIVE_ARRAY: "true"
        PARSE: ${{ github.action_path }}/../../scripts/parse-parameters.sh
      run: echo "tag-filters=$($PARSE)" >> "$GITHUB_OUTPUT"

    - name: Filter stacks
      id: filter-stacks
      run: ${{ github.action_path }}/filter-stacks.sh
      shell: bash
      env:
        THRESHOLD_DAYS: ${{ inputs.threshold-days }}
        STACK_NAME_FILTER: ${{ inputs.stack-name-filter }}
        STACK_TAG_FILTERS: ${{ steps.parse-tag-filters.outputs.tag-filters }}

    - name: Set environment variable
      if: ${{ inputs.env-var-name != null && steps.filter-stacks.outputs.stack-names != null }}
      shell: bash
      env:
        ENV_VAR: ${{ inputs.env-var-name }}
        STACK_NAMES: ${{ steps.filter-stacks.outputs.stack-names }}
      run: |
        echo "Setting environment variable '$ENV_VAR'..."
        declare -n accumulate=$ENV_VAR
        echo "$ENV_VAR=${accumulate:+$accumulate }$STACK_NAMES" >> "$GITHUB_ENV"

    - name: Report results
      shell: bash
      env:
        DESCRIPTION: ${{ inputs.description }}
        VALUES: ${{ steps.filter-stacks.outputs.stack-names }}
        REPORT: ${{ github.action_path }}/../../scripts/report-step-result/print-list.sh
      run: |
        ([[ $VALUES ]] &&
          MESSAGE="Stale ${DESCRIPTION:+$DESCRIPTION }stacks" $REPORT ||
          echo "There are no stale ${DESCRIPTION:+$DESCRIPTION }stacks") |
          tee "$GITHUB_STEP_SUMMARY"
